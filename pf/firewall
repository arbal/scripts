#!/bin/sh
#
# firewall - Simple wrapper script to manipulate firewall rules
#
# 
# NOTE: From Yosemite onwards, ipfw is no logner supported so and we
#       have to use PF (pfctl) to setup firewall.
#
# Author:  Arul Selvan
# Version: 1.0
# Date:    Feb 7, 2015

default_rule_set="/etc/pf.conf"
rule_set="${HOME}/bin/pf/pf_rules_simple.conf"

usage() {
  echo "Usage: $0 <start|stop|status|allstatus|addtable|showtable|deletetable>"
  exit
}

start_firewall() {
  # enable pf 
  /sbin/pfctl -e

  # flush all existing rules
  /sbin/pfctl -F all

  # add our rules
  /sbin/pfctl -f $rule_set
}

stop_firewall() {
  # flush our existing rules
  /sbin/pfctl -F all

  # load default rules
  /sbin/pfctl -f $default_rule_set
}

# ---- main -----
uid=`id -u`
if [ $uid -ne 0 ]; then
  echo "You need to be root to execute $0 script"
  exit
fi

if [ $# -eq 0 ]; then
  usage
fi

while [ "$1" ] 
do
  if [ "$1" = "start" ]; then
     echo "Starting firewall ..."
     start_firewall
     break
  elif [ "$1" = "stop" ]; then
     echo "Stopping firewall ..."
     stop_firewall
     break
  elif [ "$1" = "status" ]; then
     echo "Listing firewall rules ..."
     /sbin/pfctl -sr
     /sbin/pfctl -a white_list -sr
     /sbin/pfctl -t dynamic_ips -T show
     break
  elif [ "$1" = "allstatus" ]; then
     echo "Listing firewall rules ..."
     /sbin/pfctl -sa
     break
  elif [ "$1" = "addtable" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "addtable needs IP address as argument"
        usage
     fi
     echo "Adding $1 to the dynamic_ips table..."
     pfctl -t dynamic_ips -T add $1
     break
  elif [ "$1" = "deletetable" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "deletetable needs IP address as argument"
        usage
     fi
     echo "Deleting $1 from the dynamic_ips table..."
     pfctl -t dynamic_ips -T delete $1
     break
  elif [ "$1" = "showtable" ]; then
     echo "Showing dynamic_ips table..."
     pfctl -t dynamic_ips -T show
     break
  else
     usage
  fi
done
