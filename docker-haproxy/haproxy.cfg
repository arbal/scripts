#
# haproxy.cfg
#
# Description: 
#   Using haproxy to solve a very different problem. This will simply accept https
#   call, terminate it, and turn around and make https call forcing TLS1.2 and the
#   specified cipher list to target service.
#  
# Purpose:
#   For use in legacy applications that uses old tls1.0/1 protocols. This is a temporary
#   workaround to allow old apps to call services that only accept tls1.2 w/ out 
#   having to fix the legacy app. We should really fix the applications rather than 
#   than temporary workarounds like this but, here we are.
# 
# Author:  Arul Selvan
# Version: Sep 5, 2019

global
  daemon
  log stdout format raw local0
  ssl-server-verify none
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private
  ssl-default-server-ciphers ECDH+AES128:DH+AES128:DH+AES256
  ssl-default-server-options force-tlsv12

defaults
  mode http
  log global
  maxconn 4096
  timeout connect 5000
  timeout client  50000
  timeout server  50000

# use a different resolvers since we are going use this as transparent proxy
# i.e. the default DNS on the LAN will point to this proxy. Using a separate 
# proxy avoids circular loop.
resolvers mydns
  nameserver dns1 8.8.8.8:53
  nameserver dns2 1.1.1.1:53


# --------- front-end (accept tls any version) -------------
frontend https-in
  bind *:443 ssl crt /etc/ssl/certs/server.crt
  
  # switch based on sni
  use_backend www.yardiyc1.com          if { hdr(host) -i www.yardiyc1.com }
  use_backend voyager.highmarkres.com   if { hdr(host) -i voyager.highmarkres.com }
  use_backend voyager.milestone-mgt.com if { hdr(host) -i voyager.milestone-mgt.com }
  use_backend voyager.myriverstone.com  if { hdr(host) -i voyager.myriverstone.com }
  use_backend www.yardiasp.com          if { hdr(host) -i www.yardiasp.com }

  # for testing w/ browser on local host since we can't force any 'sni' like curl -H
  use_backend www.yardiyc1.com if { hdr(host) -i localhost }

  # TODO: setup a default for falling back
  #default_backend default_backend

# --------- back-end(s) start here ----------------
backend www.yardiyc1.com
  http-request set-header Host www.yardiyc1.com
  server target www.yardiyc1.com ssl resolvers mydns

backend voyager.highmarkres.com
  http-request set-header Host voyager.highmarkres.com  
  server target www.yardiyc1.com ssl resolvers mydns

backend voyager.milestone-mgt.com
  http-request set-header Host voyager.milestone-mgt.com  
  server target www.yardiyc1.com ssl resolvers mydns

backend voyager.myriverstone.com
  http-request set-header Host voyager.myriverstone.com  
  server target www.yardiyc1.com ssl resolvers mydns

backend www.yardiasp.com
  http-request set-header Host www.yardiasp.com  
  server target www.yardiyc1.com ssl resolvers mydns

# --------- the default block if nothing matched ---------
#backend default_backend
#  server target nonexistent.foobar.com ssl resolvers mydns
